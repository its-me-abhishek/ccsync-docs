{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Developing for CCSync","text":"<p>This section provides a comprehensive guide to setting up CCSync for development or deployment.</p> <p>If you have any further questions, feel free to contact us on GitHub.</p>"},{"location":"#environment-architecture","title":"Environment Architecture","text":"<p>The diagram below illustrates how various components are connected to enable synchronization on the CCSync website and the Taskwarrior Flutter App.</p> <p></p>"},{"location":"#setting-up-ccsync-for-personal-use","title":"Setting Up CCSync for Personal Use","text":""},{"location":"#prerequisites","title":"Prerequisites","text":"<ul> <li>Docker</li> <li>Google OAuth Keys</li> </ul>"},{"location":"#steps-to-run-ccsync-for-personal-use","title":"Steps to Run CCSync for Personal Use","text":"<ol> <li>Clone the CCSync repository and switch to the <code>docker-prod</code> branch (stable) or <code>main</code> branch (latest).</li> <li>Navigate to the production directory using the command: <code>cd production</code>.</li> <li> <p>Create a file named <code>.backend.env</code> with the following attributes:</p> <pre><code>CLIENT_ID=\"client_ID\" # Google Auth Secret from Prerequisites\nCLIENT_SEC=\"client_SECRET\" # Google Auth Secret from Prerequisites\nREDIRECT_URL_DEV=\"http://localhost:8000/auth/callback\" \nSESSION_KEY=\"generate a secret key using 'openssl rand -hex 32'\"\nFRONTEND_ORIGIN_DEV=\"http://localhost\" # URL of the web frontend to avoid CORS errors\nCONTAINER_ORIGIN=\"http://YOUR_CONTAINER_NAME:8080/\" # Deployed taskchampion-sync-server container, default is production-syncserver-1\n</code></pre> </li> <li> <p>Run <code>docker-compose pull</code> to pull the CCSync images.</p> </li> <li>Run <code>docker-compose up</code> to start the project.</li> <li>The frontend should now be available at <code>localhost:80</code>, the backend at <code>localhost:8000</code>, and the sync server at <code>localhost:8080</code>.</li> </ol>"},{"location":"#setting-up-a-development-environment","title":"Setting Up a Development Environment","text":""},{"location":"#prerequisites_1","title":"Prerequisites","text":"<ul> <li>Docker</li> <li>Google OAuth Keys</li> </ul>"},{"location":"#steps-to-set-up-the-frontend","title":"Steps to Set Up the Frontend","text":"<ol> <li> <p>Navigate to the frontend directory and run the following command:</p> <pre><code>npm install\n</code></pre> </li> <li> <p>Create a <code>.env</code> file in the same directory.</p> </li> <li> <p>If you want to use Docker, set the environment variables in <code>.env</code> as follows:</p> <pre><code>VITE_BACKEND_URL=\"http://localhost:8000/\" # Backend URL for app or web frontend interaction\nVITE_FRONTEND_URL=\"http://localhost:80\" # Web frontend URL to avoid CORS errors\nVITE_CONTAINER_ORIGIN=\"http://localhost:8080/\" # URL of the deployed taskchampion-sync-server container\n</code></pre> </li> <li> <p>Otherwise, set the environment variables in <code>.env</code> as follows:</p> <pre><code>VITE_BACKEND_URL=\"http://localhost:8000/\" # Backend URL for app or web frontend interaction\nVITE_FRONTEND_URL=\"http://localhost:5173\" # Web frontend URL to avoid CORS errors\nVITE_CONTAINER_ORIGIN=\"http://localhost:8080/\" # URL of the deployed taskchampion-sync-server container\n</code></pre> </li> <li> <p>Run the frontend container only:</p> <pre><code>docker-compose build frontend\ndocker-compose up\n</code></pre> </li> </ol>"},{"location":"#steps-to-set-up-the-backend","title":"Steps to Set Up the Backend","text":"<ol> <li> <p>Navigate to the backend directory and run the following commands:</p> <pre><code>go mod download\ngo mod tidy\n</code></pre> </li> <li> <p>Create a <code>.env</code> file in the same directory.</p> </li> <li>Go to the Google Cloud Credentials page to generate a client ID and secret.</li> <li> <p>If you want to use Docker, set the environment variables in <code>.env</code> as follows:</p> <pre><code>CLIENT_ID=\"client_ID\" # Google Auth Secret\nCLIENT_SEC=\"client_SECRET\" # Google Auth Secret\nREDIRECT_URL_DEV=\"http://localhost:8000/auth/callback\" \nSESSION_KEY=\"generate a secret key using 'openssl rand -hex 32'\"\nFRONTEND_ORIGIN_DEV=\"http://localhost\" # Web frontend URL to avoid CORS errors\nCONTAINER_ORIGIN=\"http://YOUR_CONTAINER_NAME:8080/\" # URL of the deployed taskchampion-sync-server container\n</code></pre> </li> <li> <p>Otherwise, set the environment variables in <code>.env</code> as follows:</p> <pre><code>CLIENT_ID=\"client_ID\" # Google Auth Secret\nCLIENT_SEC=\"client_SECRET\" # Google Auth Secret\nREDIRECT_URL_DEV=\"http://localhost:8000/auth/callback\"\nSESSION_KEY=\"generate a secret key using 'openssl rand -hex 32'\"\nFRONTEND_ORIGIN_DEV=\"http://localhost:5173\" # Web frontend URL to avoid CORS errors\nCONTAINER_ORIGIN=\"http://localhost:8080/\" # URL of the deployed taskchampion-sync-server container\n</code></pre> </li> <li> <p>Run the backend container only:</p> <pre><code>docker-compose build backend\ndocker-compose up\n</code></pre> </li> </ol> <p>Note: If you plan to run the backend without Docker, it is recommended to run it as a <code>root</code> user, preferably on <code>WSL</code> or any Linux distribution with elevated permissions. This is because the server requires permissions to update your <code>taskrc</code> file based on the logged-in user.</p> <p>Note: The Taskchampion sync server is currently being pulled from the repository here.</p>"},{"location":"#steps-to-set-up-the-taskwarrior-flutter-app-with-ccsync","title":"Steps to Set Up the Taskwarrior Flutter App with CCSync","text":"<ol> <li>For development or personal use, you only need to set up the backend and the sync server. Setting up the frontend is optional.</li> <li>Go to Settings -&gt; Turn on Taskchampion Sync.</li> <li>Navigate back to the menu, click on CCSync Credentials, and paste the credentials from the frontend as specified.</li> <li>Click Save.</li> <li>Refresh the tasks. CCSync should now be synced with your Taskwarrior Flutter App.</li> </ol>"},{"location":"#troubleshooting","title":"Troubleshooting","text":"<p>If the sync breaks, it is often due to incorrect <code>.env</code> variables. Ensure that your Docker containers are visible and accessible by using the <code>ping &lt;container_address&gt;</code> command.</p>"},{"location":"#testing","title":"Testing","text":"<ul> <li>To test the backend, navigate to the backend directory and run:<pre><code>cd backend\ngo test &lt;package_name&gt;\n</code></pre> </li> </ul> <p>Replace <code>&lt;package_name&gt;</code> with the name of the test suite you want to run.</p> <ul> <li>To test the frontend, navigate to the frontend directory and run:<pre><code>cd frontend\nnpm test\n</code></pre> </li> </ul> <p>Note: To set up or run tests for pages with URLs (e.g., <code>HomePage.tsx</code>), toggle the <code>isTesting</code> variable to <code>true</code> in <code>frontend/src/components/utils/URLs.ts</code>.</p>"},{"location":"#google-oauth-keys","title":"Google OAuth Keys","text":"<p>Before starting the frontend, go to the Google Cloud Credentials page to generate a client ID and secret. Read this guide for more information on these credentials and how they work. These keys are required to generate a consistent Client ID and Encryption Secret for using Taskchampion. If you already have your own keys, you can skip this step.</p>"},{"location":"#steps-to-generate-google-oauth-keys","title":"Steps to Generate Google OAuth Keys:","text":"<ol> <li>Go to the Google Developer Console.</li> <li>Create a new project.</li> <li>Within your project, create a new \"Client ID\" by navigating to APIs &amp; Auth &gt; Credentials and clicking on Create New Client ID.</li> <li>Select Web Application.</li> <li> <p>Enter the following for Authorized JavaScript Origins:</p> <pre><code>http://127.0.0.1\nhttp://localhost\n</code></pre> </li> <li> <p>Enter the following for Authorized Redirect URI:</p> <pre><code>http://127.0.0.1:8000/callback/\n</code></pre> </li> <li> <p>Save your changes.</p> </li> <li>You will be presented with your newly generated credentials, which are required for setting up the backend.</li> </ol>"},{"location":"about/","title":"About","text":"<p>This project is a sync server that enables sync between Taskwarrior 3.0 clients (and higher) with the Taskwarrior Flutter App. The users can use the website frontend for similar functionality like the app as well.</p> <ul> <li>Feel free to open any new discussion thread at our Zulip instance</li> <li>Visit the CCSync Github repository</li> <li>Install the Taskwarrior Flutter App</li> </ul>"},{"location":"api_documentation/","title":"API Documentation","text":""},{"location":"api_documentation/#endpoints","title":"Endpoints","text":"Method Endpoints Description <code>GET</code> <code>/tasks</code> Fetch Tasks <code>POST</code> <code>/edit-task</code> Edit task (description only) <code>POST</code> <code>/modify-task</code> Edit task (multiple parameters) <code>POST</code> <code>/add-task</code> Add a task <code>POST</code> <code>/complete-task</code> Mark a task as completed <code>POST</code> <code>/delete-task</code> Mark a task as deleted <code>GET</code> <code>/ws</code> Fetch Job Status via Websockets"},{"location":"api_documentation/#sample-payloads-for-requests","title":"Sample payloads for requests","text":"<ul> <li><code>/tasks</code> :</li> </ul> <pre><code>    api/tasks?email=email&amp;origin=container-origin&amp;UUID=clientID&amp;encryptionSecret=encryptionSecret\n</code></pre> <ul> <li><code>/edit-task</code> :</li> </ul> <pre><code>{\n    \"email\": \"email\",\n    \"encryptionSecret\": \"encryptionSecret\",\n    \"UUID\": \"clientID\",\n    \"taskID\": \"any task id\",\n    \"description\": \"new description for the task\"\n}\n</code></pre> <ul> <li><code>/add-task</code> :</li> </ul> <pre><code>{\n      \"email\": \"email\",\n      \"encryptionSecret\": \"encryptionSecret\",\n      \"UUID\": \"clientID\",\n      \"description\": \"task description\",\n      \"project\": \"task project\",\n      \"due\": \"Date in the format: DD-MM-YYYY\",\n      \"priority\": \"task priority\"\n}\n</code></pre> <ul> <li><code>/complete-task</code> :</li> </ul> <pre><code>{\n    \"email\": \"email\",\n    \"encryptionSecret\": \"encryptionSecret\",\n    \"UUID\": \"clientID\",\n    \"taskuuid\": \"uuid of the task to be marked as completed\"\n}\n</code></pre> <ul> <li><code>/delete-task</code> :</li> </ul> <pre><code>{\n    \"email\": \"email\",\n    \"encryptionSecret\": \"encryptionSecret\",\n    \"UUID\": \"clientID\",\n    \"taskuuid\": \"uuid of the task to be marked as deleted\"\n}\n</code></pre> <ul> <li><code>Note</code>: Mark a task as deleted tells that the tasks are soft deleted on taskchampion-sync-server, i.e., they are first marked as deleted, and then deleted after a period of time, typically 180 days.</li> </ul>"},{"location":"patch/","title":"Patch Notes","text":"<ul> <li>Firestore Configuration is no longer required. All the tasks now get stored locally inside your Browser!</li> <li>Added Rate Limiter</li> </ul>"}]}